{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/authentication.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction NavbarComponent_a_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 12)(1, \"span\", 13);\n    i0.ɵɵtext(2, \"Log In\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NavbarComponent_a_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 14);\n    i0.ɵɵlistener(\"click\", function NavbarComponent_a_13_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onLogout());\n    });\n    i0.ɵɵelementStart(1, \"span\", 13);\n    i0.ɵɵtext(2, \"Log Out\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class NavbarComponent {\n  constructor(authenticationService, router) {\n    this.authenticationService = authenticationService;\n    this.router = router;\n  }\n  ngOnInit() {}\n  isLoggedIn() {\n    return this.authenticationService.isLoggedIn();\n  }\n  onLogout() {\n    this.authenticationService.logout();\n    this.router.navigateByUrl('#');\n    return;\n  }\n  static {\n    this.ɵfac = function NavbarComponent_Factory(t) {\n      return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NavbarComponent,\n      selectors: [[\"app-navbar\"]],\n      decls: 14,\n      vars: 2,\n      consts: [[1, \"navbar\", \"navbar-expand\", \"navbar-light\", \"bg-light\"], [\"href\", \"#\", 1, \"navbar-brand\"], [\"src\", \"/assets/images/logo.png\"], [\"type\", \"button\", \"datatoggle\", \"collapse\", \"data-target\", \"#navbarNavAltMarkup\", \"ariacontrols\", \"navbarNavAltMarkup\", \"aria-expanded\", \"false\", \"arialabel\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [\"id\", \"navbarNavAltMarkup\", 1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\"], [\"routerLink\", \"list-trips\", 1, \"nav-item\", \"nav-link\", \"active\"], [1, \"sr-only\"], [1, \"navbar-end\"], [\"class\", \"navbar-item\", \"routerLink\", \"login\", 4, \"ngIf\"], [\"class\", \"navbar-item\", \"routerLink\", \"\", 3, \"click\", 4, \"ngIf\"], [\"routerLink\", \"login\", 1, \"navbar-item\"], [1, \"has-icon-left\"], [\"routerLink\", \"\", 1, \"navbar-item\", 3, \"click\"]],\n      template: function NavbarComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"nav\", 0)(1, \"a\", 1);\n          i0.ɵɵelement(2, \"img\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"button\", 3);\n          i0.ɵɵelement(4, \"span\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 5)(6, \"div\", 6)(7, \"a\", 7);\n          i0.ɵɵtext(8, \"Trips\");\n          i0.ɵɵelementStart(9, \"span\", 8);\n          i0.ɵɵtext(10, \"(current)\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(11, \"div\", 9);\n          i0.ɵɵtemplate(12, NavbarComponent_a_12_Template, 3, 0, \"a\", 10);\n          i0.ɵɵtemplate(13, NavbarComponent_a_13_Template, 3, 0, \"a\", 11);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn());\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn());\n        }\n      },\n      dependencies: [i3.NgIf, i2.RouterLink],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","NavbarComponent_a_13_Template_a_click_0_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","onLogout","NavbarComponent","constructor","authenticationService","router","ngOnInit","isLoggedIn","logout","navigateByUrl","ɵɵdirectiveInject","i1","AuthenticationService","i2","Router","selectors","decls","vars","consts","template","NavbarComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","NavbarComponent_a_12_Template","NavbarComponent_a_13_Template","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Kenyk\\Desktop\\SNHUCompSci\\CS-465-Portfolio\\CS-465-Portfolio\\app_admin\\src\\app\\navbar\\navbar.component.ts","C:\\Users\\Kenyk\\Desktop\\SNHUCompSci\\CS-465-Portfolio\\CS-465-Portfolio\\app_admin\\src\\app\\navbar\\navbar.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\n\nexport class NavbarComponent implements OnInit {\n  constructor(\n    private authenticationService: AuthenticationService,\n    private router: Router\n  ) { }\n\n  ngOnInit() { }\n  public isLoggedIn(): boolean {\n    return this.authenticationService.isLoggedIn();\n  }\n\n  onLogout(): void {\n    this.authenticationService.logout();\n    this.router.navigateByUrl('#');\n    return;\n  }\n}","<nav class=\"navbar navbar-expand navbar-light bg-light\">\n    <a class=\"navbar-brand\" href=\"#\"><img src=\"/assets/images/logo.png\"></a>\n    <button class=\"navbar-toggler\" type=\"button\" datatoggle=\"collapse\" data-target=\"#navbarNavAltMarkup\"\n      ariacontrols=\"navbarNavAltMarkup\" aria-expanded=\"false\" arialabel=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n      <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link active\" routerLink=\"list-trips\">Trips<span class=\" sr-only \">(current)</span></a>\n      </div>\n    </div>\n    <div class=\"navbar-end\">\n      <a class=\"navbar-item\" routerLink=\"login\" *ngIf=\"!isLoggedIn()\">\n        <span class=\"has-icon-left\">Log In</span>\n      </a>\n      <a class=\"navbar-item\" routerLink=\"\" (click)=\"onLogout()\" *ngIf=\"isLoggedIn()\">\n        <span class=\"has-icon-left\">Log Out</span>\n      </a>\n    </div>\n  </nav>"],"mappings":";;;;;;ICYMA,EAAA,CAAAC,cAAA,YAAgE;IAClCD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;;IAE3CH,EAAA,CAAAC,cAAA,YAA+E;IAA1CD,EAAA,CAAAI,UAAA,mBAAAC,iDAAA;MAAAL,EAAA,CAAAM,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAR,EAAA,CAAAS,aAAA;MAAA,OAAST,EAAA,CAAAU,WAAA,CAAAF,MAAA,CAAAG,QAAA,EAAU;IAAA,EAAC;IACvDX,EAAA,CAAAC,cAAA,eAA4B;IAAAD,EAAA,CAAAE,MAAA,cAAO;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;ADNlD,OAAM,MAAOS,eAAe;EAC1BC,YACUC,qBAA4C,EAC5CC,MAAc;IADd,KAAAD,qBAAqB,GAArBA,qBAAqB;IACrB,KAAAC,MAAM,GAANA,MAAM;EACZ;EAEJC,QAAQA,CAAA,GAAK;EACNC,UAAUA,CAAA;IACf,OAAO,IAAI,CAACH,qBAAqB,CAACG,UAAU,EAAE;EAChD;EAEAN,QAAQA,CAAA;IACN,IAAI,CAACG,qBAAqB,CAACI,MAAM,EAAE;IACnC,IAAI,CAACH,MAAM,CAACI,aAAa,CAAC,GAAG,CAAC;IAC9B;EACF;;;uBAfWP,eAAe,EAAAZ,EAAA,CAAAoB,iBAAA,CAAAC,EAAA,CAAAC,qBAAA,GAAAtB,EAAA,CAAAoB,iBAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAAfZ,eAAe;MAAAa,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCV5B/B,EAAA,CAAAC,cAAA,aAAwD;UACnBD,EAAA,CAAAiC,SAAA,aAAmC;UAAAjC,EAAA,CAAAG,YAAA,EAAI;UACxEH,EAAA,CAAAC,cAAA,gBACwF;UACtFD,EAAA,CAAAiC,SAAA,cAAyC;UAC3CjC,EAAA,CAAAG,YAAA,EAAS;UACTH,EAAA,CAAAC,cAAA,aAA8D;UAEED,EAAA,CAAAE,MAAA,YAAK;UAAAF,EAAA,CAAAC,cAAA,cAAwB;UAAAD,EAAA,CAAAE,MAAA,iBAAS;UAAAF,EAAA,CAAAG,YAAA,EAAO;UAG7GH,EAAA,CAAAC,cAAA,cAAwB;UACtBD,EAAA,CAAAkC,UAAA,KAAAC,6BAAA,gBAEI;UACJnC,EAAA,CAAAkC,UAAA,KAAAE,6BAAA,gBAEI;UACNpC,EAAA,CAAAG,YAAA,EAAM;;;UANuCH,EAAA,CAAAqC,SAAA,IAAmB;UAAnBrC,EAAA,CAAAsC,UAAA,UAAAN,GAAA,CAAAf,UAAA,GAAmB;UAGHjB,EAAA,CAAAqC,SAAA,GAAkB;UAAlBrC,EAAA,CAAAsC,UAAA,SAAAN,GAAA,CAAAf,UAAA,GAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}