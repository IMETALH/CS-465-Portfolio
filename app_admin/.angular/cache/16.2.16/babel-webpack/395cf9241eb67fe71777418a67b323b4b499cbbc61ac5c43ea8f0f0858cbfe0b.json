{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let EditTripComponent = class EditTripComponent {\n  constructor(formBuilder, router, tripService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.tripService = tripService;\n    this.submitted = false;\n    this.tripCode = null; // Variable for storing the trip code\n  }\n\n  ngOnInit() {\n    this.tripCode = localStorage.getItem('tripCode');\n    if (!this.tripCode) {\n      alert(\"Couldn't find the trip code!\");\n      this.router.navigate(['']);\n      return;\n    }\n    console.log(`EditTripComponent#onInit found tripCode: ${this.tripCode}`);\n    this.editTripForm = this.formBuilder.group({\n      _id: [],\n      code: [this.tripCode, Validators.required],\n      name: ['', Validators.required],\n      length: ['', Validators.required],\n      start: ['', Validators.required],\n      resort: ['', Validators.required],\n      perPerson: ['', Validators.required],\n      image: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n    console.log(`EditTripComponent#onInit calling TripDataService#getTrip('${this.tripCode}')`);\n    this.tripService.getTrip(this.tripCode).subscribe({\n      next: data => {\n        console.log('Fetched trip data:', data);\n        if (data) {\n          this.editTripForm.patchValue(data); // Directly patch form with fetched data\n        } else {\n          console.error('Received empty or null trip data');\n        }\n      },\n      error: err => {\n        console.error('Error fetching trip data:', err);\n        alert('Failed to fetch trip data. Redirecting to home.');\n        this.router.navigate(['']);\n      }\n    });\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.editTripForm.valid) {\n      console.log(`EditTripComponent#onSubmit calling TripDataService#updateTrip`);\n      this.tripService.updateTrip(this.editTripForm.value).subscribe({\n        next: data => {\n          console.log('Trip updated successfully:', data);\n          this.router.navigate(['']);\n        },\n        error: err => {\n          console.error('Error updating trip:', err);\n          alert('Failed to update the trip.');\n        }\n      });\n    }\n  }\n  deleteTrip() {\n    console.log(`TripEditComponent#deleteTrip calling TripDataService#deleteTrip('${this.tripCode}')`);\n    // If the trip code exists, call the deleteTrip method from the service\n    if (this.tripCode) {\n      this.tripService.deleteTrip(this.tripCode).subscribe({\n        next: response => {\n          console.log('Trip successfully deleted:', response);\n          // Clear the form and navigate the user away from the current page\n          this.editTripForm.reset();\n          this.router.navigate(['/']);\n        },\n        error: err => {\n          console.error('Error deleting trip:', err);\n          alert('Failed to delete the trip. Please try again.');\n        }\n      });\n    } else {\n      console.error('TripEditComponent#deleteTrip failed, tripCode is null');\n      this.router.navigate(['/']);\n    }\n  }\n  // Get the form short name to access the form fields\n  get f() {\n    return this.editTripForm.controls;\n  }\n};\nEditTripComponent = __decorate([Component({\n  selector: 'app-edit-trip',\n  templateUrl: './edit-trip.component.html',\n  styleUrls: ['./edit-trip.component.css']\n})], EditTripComponent);","map":{"version":3,"names":["Component","Validators","EditTripComponent","constructor","formBuilder","router","tripService","submitted","tripCode","ngOnInit","localStorage","getItem","alert","navigate","console","log","editTripForm","group","_id","code","required","name","length","start","resort","perPerson","image","description","getTrip","subscribe","next","data","patchValue","error","err","onSubmit","valid","updateTrip","value","deleteTrip","response","reset","f","controls","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Kenyk\\Desktop\\SNHUCompSci\\CS-465-Portfolio\\CS-465-Portfolio\\app_admin\\src\\app\\edit-trip\\edit-trip.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { TripDataService } from '../services/trip-data.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-trip',\r\n  templateUrl: './edit-trip.component.html',\r\n  styleUrls: ['./edit-trip.component.css']\r\n})\r\nexport class EditTripComponent implements OnInit {\r\n  editTripForm!: FormGroup; // Use the `!` operator to indicate the form will be initialized\r\n  submitted = false;\r\n  private tripCode: string | null = null; // Variable for storing the trip code\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private tripService: TripDataService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.tripCode = localStorage.getItem('tripCode');\r\n    if (!this.tripCode) {\r\n      alert(\"Couldn't find the trip code!\");\r\n      this.router.navigate(['']);\r\n      return;\r\n    }\r\n\r\n    console.log(`EditTripComponent#onInit found tripCode: ${this.tripCode}`);\r\n\r\n    this. editTripForm = this.formBuilder.group({\r\n      _id: [],\r\n      code: [this.tripCode, Validators.required],\r\n      name: ['', Validators.required],\r\n      length: ['', Validators.required],\r\n      start: ['', Validators.required],\r\n      resort: ['', Validators.required],\r\n      perPerson: ['', Validators.required],\r\n      image: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n    });\r\n\r\n    console.log(`EditTripComponent#onInit calling TripDataService#getTrip('${this.tripCode}')`);\r\n    this.tripService.getTrip(this.tripCode).subscribe({\r\n      next: (data) => {\r\n        console.log('Fetched trip data:', data);\r\n        if (data) {\r\n          this. editTripForm.patchValue(data); // Directly patch form with fetched data\r\n        } else {\r\n          console.error('Received empty or null trip data');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        console.error('Error fetching trip data:', err);\r\n        alert('Failed to fetch trip data. Redirecting to home.');\r\n        this.router.navigate(['']);\r\n      },\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this. editTripForm.valid) {\r\n      console.log(`EditTripComponent#onSubmit calling TripDataService#updateTrip`);\r\n      this.tripService.updateTrip(this. editTripForm.value).subscribe({\r\n        next: (data) => {\r\n          console.log('Trip updated successfully:', data);\r\n          this.router.navigate(['']);\r\n        },\r\n        error: (err) => {\r\n          console.error('Error updating trip:', err);\r\n          alert('Failed to update the trip.');\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteTrip(): void {\r\n    console.log(`TripEditComponent#deleteTrip calling TripDataService#deleteTrip('${this.tripCode}')`);\r\n  \r\n    // If the trip code exists, call the deleteTrip method from the service\r\n    if (this.tripCode) {\r\n      this.tripService.deleteTrip(this.tripCode).subscribe({\r\n        next: (response) => {\r\n          console.log('Trip successfully deleted:', response);\r\n          // Clear the form and navigate the user away from the current page\r\n          this.editTripForm.reset();\r\n          this.router.navigate(['/']);\r\n        },\r\n        error: (err) => {\r\n          console.error('Error deleting trip:', err);\r\n          alert('Failed to delete the trip. Please try again.');\r\n        }\r\n      });\r\n    } else {\r\n      console.error('TripEditComponent#deleteTrip failed, tripCode is null');\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n  \r\n  // Get the form short name to access the form fields\r\n  get f() {\r\n    return this. editTripForm.controls;\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}