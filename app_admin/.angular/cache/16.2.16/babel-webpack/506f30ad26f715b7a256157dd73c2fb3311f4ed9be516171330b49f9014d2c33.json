{"ast":null,"code":"import { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { BROWSER_STORAGE } from '../storage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TripDataService {\n  constructor(httpClient, storage) {\n    this.httpClient = httpClient;\n    this.storage = storage;\n    this.apiBaseUrl = 'http://localhost:3000/api';\n    this.tripUrl = `${this.apiBaseUrl}/trips`;\n  }\n  addTrip(formData) {\n    console.log('Inside TripDataService#addTrip');\n    return this.httpClient.post(this.tripUrl, formData); // Return Observable directly\n  }\n\n  getTrip(tripCode) {\n    console.log('Inside TripDataService#getTrip');\n    return this.httpClient.get(`${this.tripUrl}/${tripCode}`).pipe(catchError(this.handleError));\n  }\n  getTrips() {\n    console.log('Inside TripDataService#getTrips');\n    return this.httpClient.get(`${this.tripUrl}`).pipe(catchError(this.handleError));\n  }\n  updateTrip(formData) {\n    console.log('Inside TripDataService#updateTrip');\n    console.log(formData);\n    // Ensure the trip code is correctly appended to the URL\n    const url = `${this.tripUrl}/${formData.code}`;\n    return this.httpClient.put(url, formData) // Ensure it's a typed PUT request for better handling\n    .pipe(catchError(this.handleError));\n  }\n  deleteTrip(tripCode) {\n    if (!tripCode) {\n      return throwError(() => new Error('Invalid trip code for deletion'));\n    }\n    console.log(`Inside TripDataService#deleteTrip for tripCode: ${tripCode}`);\n    return this.httpClient.delete(`${this.tripUrl}/${tripCode}`).pipe(catchError(this.handleError));\n  }\n  register(user) {\n    console.log('Inside TripDataService#register');\n    return this.makeAuthApiCall('register', user);\n  }\n  login(user) {\n    console.log('Inside TripDataService#login');\n    return this.makeAuthApiCall('login', user);\n  }\n  makeAuthApiCall(urlPath, user) {\n    console.log(`Inside TripDataService#makeAuthApiCall('${urlPath}')`);\n    if (!urlPath || !user) {\n      return throwError(() => new Error('Invalid URL path or user data for authentication call'));\n    }\n    return this.httpClient.post(`${this.apiBaseUrl}/${urlPath}`, user).pipe(catchError(this.handleError) // Handle errors using the custom error handler\n    );\n  }\n\n  handleError(error) {\n    let errorMessage = 'An unknown error occurred';\n    if (error.status) {\n      switch (error.status) {\n        case 400:\n          errorMessage = 'Bad Request: Please check the entered data.';\n          break;\n        case 401:\n          errorMessage = 'Incorrect Username';\n          break;\n        case 403:\n          errorMessage = 'Forbidden: You do not have permission to perform this action.';\n          break;\n        case 404:\n          errorMessage = 'Not Found: The requested resource was not found.';\n          break;\n        case 500:\n          errorMessage = 'Internal Server Error: Something went wrong on our side.';\n          break;\n        default:\n          errorMessage = `${error.status}: ${error.statusText || 'Unexpected error'}`;\n      }\n    }\n    console.error('HTTP Error:', error);\n    // using error object\n    //return throwError(() => new Error(errorMessage));\n    // Directly throw the string message\n    return throwError(() => errorMessage);\n  }\n  static {\n    this.ɵfac = function TripDataService_Factory(t) {\n      return new (t || TripDataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(BROWSER_STORAGE));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TripDataService,\n      factory: TripDataService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["catchError","throwError","BROWSER_STORAGE","TripDataService","constructor","httpClient","storage","apiBaseUrl","tripUrl","addTrip","formData","console","log","post","getTrip","tripCode","get","pipe","handleError","getTrips","updateTrip","url","code","put","deleteTrip","Error","delete","register","user","makeAuthApiCall","login","urlPath","error","errorMessage","status","statusText","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Kenyk\\Desktop\\SNHUCompSci\\CS-465-Portfolio\\CS-465-Portfolio\\app_admin\\src\\app\\services\\trip-data.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { BROWSER_STORAGE } from '../storage';\r\nimport { AuthResponse } from '../models/authresponse';\r\nimport { Trip } from '../models/trip';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TripDataService {\r\n  constructor(\r\n    private httpClient: HttpClient, \r\n    @Inject(BROWSER_STORAGE) private storage: Storage) {}\r\n\r\n  private apiBaseUrl = 'http://localhost:3000/api';\r\n  private tripUrl = `${this.apiBaseUrl}/trips`;\r\n\r\n  public addTrip(formData: Trip): Observable<Trip> {\r\n    console.log('Inside TripDataService#addTrip');\r\n    return this.httpClient.post<Trip>(this.tripUrl, formData); // Return Observable directly\r\n  }\r\n\r\n  public getTrip(tripCode: string): Observable<Trip> {\r\n    console.log('Inside TripDataService#getTrip');\r\n    return this.httpClient\r\n      .get<Trip>(`${this.tripUrl}/${tripCode}`)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }  \r\n\r\n  public getTrips(): Observable<Trip[]> {\r\n    console.log('Inside TripDataService#getTrips');\r\n    return this.httpClient\r\n    .get<Trip[]>(`${this.tripUrl}`)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  public updateTrip(formData: Trip): Observable<Trip> {\r\n    console.log('Inside TripDataService#updateTrip');\r\n    console.log(formData);\r\n\r\n    // Ensure the trip code is correctly appended to the URL\r\n    const url = `${this.tripUrl}/${formData.code}`;\r\n    \r\n    return this.httpClient\r\n      .put<Trip>(url, formData) // Ensure it's a typed PUT request for better handling\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  public deleteTrip(tripCode: string): Observable<any> {\r\n    if (!tripCode) {\r\n      return throwError(() => new Error('Invalid trip code for deletion'));\r\n    }\r\n    console.log(`Inside TripDataService#deleteTrip for tripCode: ${tripCode}`);\r\n    return this.httpClient\r\n    .delete(`${this.tripUrl}/${tripCode}`)\r\n    .pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  public register(user: User): Observable<AuthResponse> { \r\n    console.log('Inside TripDataService#register');\r\n    return this.makeAuthApiCall('register', user);\r\n  }\r\n  \r\n  public login(user: User): Observable<AuthResponse> {\r\n    console.log('Inside TripDataService#login');\r\n    return this.makeAuthApiCall('login', user);\r\n  }  \r\n  \r\n  public makeAuthApiCall(urlPath: string, user: User): Observable<AuthResponse> {\r\n    console.log(`Inside TripDataService#makeAuthApiCall('${urlPath}')`);\r\n    if (!urlPath || !user) {\r\n      return throwError(() => new Error('Invalid URL path or user data for authentication call'));\r\n    }\r\n    return this.httpClient\r\n      .post<AuthResponse>(`${this.apiBaseUrl}/${urlPath}`, user)\r\n      .pipe(\r\n        catchError(this.handleError) // Handle errors using the custom error handler\r\n      );\r\n  }\r\n  \r\n  private handleError(error: any): Observable<never> {\r\n    let errorMessage = 'An unknown error occurred';\r\n  \r\n    if (error.status) {\r\n      switch (error.status) {\r\n        case 400:\r\n          errorMessage = 'Bad Request: Please check the entered data.';\r\n          break;\r\n        case 401:\r\n          errorMessage = 'Incorrect Username';\r\n          break;\r\n        case 403:\r\n          errorMessage = 'Forbidden: You do not have permission to perform this action.';\r\n          break;\r\n        case 404:\r\n          errorMessage = 'Not Found: The requested resource was not found.';\r\n          break;\r\n        case 500:\r\n          errorMessage = 'Internal Server Error: Something went wrong on our side.';\r\n          break;\r\n        default:\r\n          errorMessage = `${error.status}: ${error.statusText || 'Unexpected error'}`;\r\n      }\r\n    }\r\n  \r\n    console.error('HTTP Error:', error);\r\n    // using error object\r\n    //return throwError(() => new Error(errorMessage));\r\n    // Directly throw the string message\r\n    return throwError(() => errorMessage);\r\n  }\r\n  \r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}