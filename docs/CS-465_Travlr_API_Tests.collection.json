{
	"info": {
		"_postman_id": "97999ad1-9074-4082-afdc-4d28e1e3d4d0",
		"name": "CS-465_Travlr_API_Tests",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" width=\"2162\" height=\"1530\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related topics\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20071128"
	},
	"item": [
		{
			"name": "Basic Endpoint Tests",
			"item": [
				{
					"name": "Get trips/",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{travlr_host}}:{{port}}/api/trips",
							"protocol": "{{protocol}}",
							"host": [
								"{{travlr_host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"trips"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get trips/:tripCode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{travlr_host}}:{{port}}/api/trips/GALR20240214",
							"protocol": "{{protocol}}",
							"host": [
								"{{travlr_host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"trips",
								"GALR20240214"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get rooms/",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{travlr_host}}:{{port}}/api/rooms",
							"protocol": "{{protocol}}",
							"host": [
								"{{travlr_host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"rooms"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get rooms/:roomsCode",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{travlr_host}}:{{port}}/api/rooms/FIRSTCLASS",
							"protocol": "{{protocol}}",
							"host": [
								"{{travlr_host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"rooms",
								"FIRSTCLASS"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get meals/",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{travlr_host}}:{{port}}/api/meals",
							"protocol": "{{protocol}}",
							"host": [
								"{{travlr_host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"meals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get meals/:mealsCode",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{travlr_host}}:{{port}}/api/meals/SEAFOODSPECIAL",
							"protocol": "{{protocol}}",
							"host": [
								"{{travlr_host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"meals",
								"SEAFOODSPECIAL"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get news/",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{travlr_host}}:{{port}}/api/news",
							"protocol": "{{protocol}}",
							"host": [
								"{{travlr_host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"news"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get news/:newsCode",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{travlr_host}}:{{port}}/api/news/TIPS_6",
							"protocol": "{{protocol}}",
							"host": [
								"{{travlr_host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"news",
								"TIPS_6"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}